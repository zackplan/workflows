name: Newman Workflow 🧑‍🚀

on:
  workflow_call:
    inputs:
      collection:
        description: URL or path to a Postman collection
        type: string
        required: true

      environment:
        description: URL or path to a Postman environment
        type: string
        required: false

      working_directory:
        description: Path to the working directory
        type: string
        required: false


      wait:
        description: Whether to wait before running the integration test
        type: boolean
        required: false
        default: false

      wait_seconds:
        description: Amount of seconds to wait before running the integration test
        type: number
        required: false
        default: 30

      wait_timeout:
        description: Maximum amount of minutes to wait
        type: number
        required: false
        default: 5

      wait_until_healthy:
        description: Wait until an URL returns "200 OK", instead of waiting a specific amount of seconds before running the integration test
        type: boolean
        required: false
        default: false

      wait_until_healthy_url:
        description: URL to call to check if the integration test is ready to be started
        type: string
        required: false

      wait_until_healthy_delay:
        description: Amount of seconds to wait between checking if the URL is healthy
        type: number
        required: false
        default: 5

    secrets:
      api_key:
        description: API Key used to load the resources from the Postman API
        required: false

jobs:
  run_integration_test:
    name: Run Integration Test 💻
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # pin@v2.4.0

      - name: Wait ${{ inputs.wait_until_healthy == true && 'until healthy' || format('{0} seconds', inputs.wait_seconds) }} 💤
        if: inputs.wait == true
        shell: bash
        run: |
          if [ "${{ inputs.wait_until_healthy }}" == "true" ]; then
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${{ inputs.wait_until_healthy_url }})" != "200" ]]; do
              sleep ${{ inputs.wait_until_healthy_delay }}
            done
          else
            sleep ${{ inputs.wait_seconds }}
          fi
        env:
          wait_timeout: ${{ inputs.wait_timeout }}
        timeout-minutes: ${{ fromJSON(env.wait_timeout) }}

      - name: Run Integration Test 💻
        run: |
          npx newman run ${{ inputs.collection }} \
            ${{ inputs.environment && format('--environment {0}', inputs.environment) }} \
            ${{ inputs.working_directory && format('--working-dir {0}', inputs.working_directory) }} \
            ${{ secrets.api_key && format('--postman-api-key {0}', secrets.api_key) }}
